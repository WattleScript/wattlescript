@{
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>pandas.concat &#8212; pandas 1.5.0.dev0+796.gecfcb35844.dirty documentation</title>

    <link href="../../_static/styles/theme.css?digest=1999514e3f237ded88cf" rel="stylesheet">
    <link href="../../_static/styles/pydata-sphinx-theme.css?digest=1999514e3f237ded88cf" rel="stylesheet">


    <link rel="stylesheet"
          href="../../_static/vendor/fontawesome/5.13.0/css/all.min.css">
    <link rel="preload" as="font" type="font/woff2" crossorigin
          href="../../_static/vendor/fontawesome/5.13.0/webfonts/fa-solid-900.woff2">
    <link rel="preload" as="font" type="font/woff2" crossorigin
          href="../../_static/vendor/fontawesome/5.13.0/webfonts/fa-brands-400.woff2">





    <link rel="stylesheet" type="text/css" href="../../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/styles/pydata-sphinx-theme.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/plot_directive.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/panels-variables.06eb56fa6e07937060861dad626602ad.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/css/getting_started.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/css/pandas.css" />

    <link rel="preload" as="script" href="../../_static/scripts/pydata-sphinx-theme.js?digest=1999514e3f237ded88cf">

    <script data-url_root="../../" id="documentation_options" src="../../_static/documentation_options.js"></script>
    <script src="../../_static/jquery.js"></script>
    <script src="../../_static/underscore.js"></script>
    <script src="../../_static/doctools.js"></script>
    <link rel="shortcut icon" href="../../_static/favicon.ico"/>
    <link rel="index" title="Index" href="../../genindex.html" />
    <link rel="search" title="Search" href="../../search.html" />
    <link rel="next" title="pandas.get_dummies" href="pandas.get_dummies.html" />
    <link rel="prev" title="pandas.merge_asof" href="pandas.merge_asof.html" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="docsearch:language" content="en">


    <!-- Google Analytics -->

    <script async="" src="https://www.google-analytics.com/analytics.js"></script>
    <script>
        window.ga = window.ga || function () {
            (ga.q = ga.q || []).push(arguments) };
        ga.l = +new Date;
        ga('create', 'UA-27880019-2', 'auto');
        ga('set', 'anonymizeIp', true);
        ga('send', 'pageview');
    </script>

</head>
<body data-spy="scroll" data-target="#bd-toc-nav" data-offset="80">

<div class="container-fluid" id="banner"></div>


<nav class="navbar navbar-light navbar-expand-lg bg-light fixed-top bd-navbar" id="navbar-main"><div class="container-xl">

    <div id="navbar-start">



        <a class="navbar-brand" href="../../index.html">
            <img src="../../_static/pandas.svg" class="logo" alt="logo">
        </a>



    </div>

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapsible" aria-controls="navbar-collapsible" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>


    <div id="navbar-collapsible" class="col-lg-9 collapse navbar-collapse">
        <div id="navbar-center" class="mr-auto">

            <div class="navbar-center-item">
                <ul id="navbar-main-elements" class="navbar-nav">
                    <li class="toctree-l1 nav-item">
                        <a class="reference internal nav-link" href="../../getting_started/index.html">
                            Getting started
                        </a>
                    </li>

                    <li class="toctree-l1 nav-item">
                        <a class="reference internal nav-link" href="../../user_guide/index.html">
                            User Guide
                        </a>
                    </li>

                    <li class="toctree-l1 current active nav-item">
                        <a class="reference internal nav-link" href="../index.html">
                            API reference
                        </a>
                    </li>

                    <li class="toctree-l1 nav-item">
                        <a class="reference internal nav-link" href="../../development/index.html">
                            Development
                        </a>
                    </li>

                    <li class="toctree-l1 nav-item">
                        <a class="reference internal nav-link" href="../../whatsnew/index.html">
                            Release notes
                        </a>
                    </li>


                </ul>
            </div>

        </div>

        <div id="navbar-end">

            <div class="navbar-end-item">
                <div class="dropdown" id="version_switcher">
                    <button type="button" class="btn btn-primary btn-sm navbar-btn dropdown-toggle" id="version_switcher_button" data-toggle="dropdown">
                        dev  <!-- this text may get changed later by javascript -->
                        <span class="caret"></span>
                    </button>
                    <div id="version_switcher_menu" class="dropdown-menu list-group-flush py-0" aria-labelledby="version_switcher_button">
                        <!-- dropdown will be populated by javascript on page load -->
                    </div>
                </div>

                <!-- NOTE: this JS must live here (not in our global JS file) because it relies
                     on being processed by Jinja before it is run (specifically for replacing
                     variables reference/api/pandas.concat and {'json_url': 'https://pandas.pydata.org/versions.json', 'url_template': 'https://pandas.pydata.org/{version}/', 'version_match': 'dev'}.
                -->

                <script type="text/javascript">
                    // Construct the target URL from the JSON components
                    function buildURL(entry) {
                        var template = "https://pandas.pydata.org/{version}/";  // supplied by jinja
                        template = template.replace("{version}", entry.version);
                        return template;
                    }

                    // Check if corresponding page path exists in other version of docs
                    // and, if so, go there instead of the homepage of the other docs version
                    function checkPageExistsAndRedirect(event) {
                        const currentFilePath = "reference/api/pandas.concat.html",
                            tryUrl = event.target.getAttribute("href");
                        let otherDocsHomepage = tryUrl.replace(currentFilePath, "");
                        $.ajax({
                            type: 'HEAD',
                            url: tryUrl,
                            // if the page exists, go there
                            success: function() {
                                location.href = tryUrl;
                            }
                        }).fail(function() {
                            location.href = otherDocsHomepage;
                        });
                        // this prevents the browser from following the href of the clicked node
                        // (which is fine because this function takes care of redirecting)
                        return false;
                    }

                    // Populate the version switcher from the JSON config file
                    (function () {
                        $.getJSON("https://pandas.pydata.org/versions.json", function(data, textStatus, jqXHR) {
                            const currentFilePath = "reference/api/pandas.concat.html";
                            // create links to the corresponding page in the other docs versions
                            $.each(data, function(index, entry) {
                                // if no custom name specified (e.g., "latest"), use version string
                                if (!("name" in entry)) {
                                    entry.name = entry.version;
                                }
                                // create the node
                                const node = document.createElement("a");
                                node.setAttribute("class", "list-group-item list-group-item-action py-1");
                                node.textContent = `${entry.name}`;
                                // get the base URL for that doc version, add the current page's
                                // path to it, and set as `href`
                                entry.url = buildURL(entry);
                                node.setAttribute("href", `${entry.url}${currentFilePath}`);
                                // on click, AJAX calls will check if the linked page exists before
                                // trying to redirect, and if not, will redirect to the homepage
                                // for that version of the docs.
                                node.onclick = checkPageExistsAndRedirect;
                                $("#version_switcher_menu").append(node);
                                // replace dropdown button text with the preferred display name of
                                // this version, rather than using sphinx's 1.5.0.dev0+796.gecfcb35844.dirty variable.
                                // also highlight the dropdown entry for the currently-viewed
                                // version's entry
                                if (entry.version == "dev") {
                                    node.classList.add("active");
                                    $("#version_switcher_button").text(entry.name);
                                }
                            });
                        });
                    })();
                </script>
            </div>

            <div class="navbar-end-item">
                <ul id="navbar-icon-links" class="navbar-nav" aria-label="Icon Links">
                    <li class="nav-item">
                        <a class="nav-link" href="https://github.com/pandas-dev/pandas" rel="noopener" target="_blank" title="GitHub"><span><i class="fab fa-github-square"></i></span>
                            <label class="sr-only">GitHub</label></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="https://twitter.com/pandas_dev" rel="noopener" target="_blank" title="Twitter"><span><i class="fab fa-twitter-square"></i></span>
                            <label class="sr-only">Twitter</label></a>
                    </li>
                </ul>
            </div>

        </div>
    </div>
</div>
</nav>


<div class="container-xl">
    <div class="row">


        <!-- Only show if we have sidebars configured, else just a small margin  -->
        <div class="col-12 col-md-3 bd-sidebar">
            <div class="sidebar-start-items"><form class="bd-search d-flex align-items-center" action="../../search.html" method="get">
                <i class="icon fas fa-search"></i>
                <input type="search" class="form-control" name="q" id="search-input" placeholder="Search the docs ..." aria-label="Search the docs ..." autocomplete="off" >
            </form><nav class="bd-links" id="bd-docs-nav" aria-label="Main navigation">
                <div class="bd-toc-item active">

                    <ul class="current nav bd-sidenav">
                        <li class="toctree-l1">
                            <a class="reference internal" href="../io.html">
                                Input/output
                            </a>
                        </li>
                        <li class="toctree-l1 current active has-children">
                            <a class="reference internal" href="../general_functions.html">
                                General functions
                            </a>
                            <input checked="" class="toctree-checkbox" id="toctree-checkbox-1" name="toctree-checkbox-1" type="checkbox"/>
                            <label for="toctree-checkbox-1">
                                <i class="fas fa-chevron-down">
                                </i>
                            </label>
                            <ul class="current">
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.melt.html">
                                        pandas.melt
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.pivot.html">
                                        pandas.pivot
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.pivot_table.html">
                                        pandas.pivot_table
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.crosstab.html">
                                        pandas.crosstab
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.cut.html">
                                        pandas.cut
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.qcut.html">
                                        pandas.qcut
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.merge.html">
                                        pandas.merge
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.merge_ordered.html">
                                        pandas.merge_ordered
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.merge_asof.html">
                                        pandas.merge_asof
                                    </a>
                                </li>
                                <li class="toctree-l2 current active">
                                    <a class="current reference internal" href="#">
                                        pandas.concat
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.get_dummies.html">
                                        pandas.get_dummies
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.factorize.html">
                                        pandas.factorize
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.unique.html">
                                        pandas.unique
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.wide_to_long.html">
                                        pandas.wide_to_long
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.isna.html">
                                        pandas.isna
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.isnull.html">
                                        pandas.isnull
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.notna.html">
                                        pandas.notna
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.notnull.html">
                                        pandas.notnull
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.to_numeric.html">
                                        pandas.to_numeric
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.to_datetime.html">
                                        pandas.to_datetime
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.to_timedelta.html">
                                        pandas.to_timedelta
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.date_range.html">
                                        pandas.date_range
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.bdate_range.html">
                                        pandas.bdate_range
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.period_range.html">
                                        pandas.period_range
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.timedelta_range.html">
                                        pandas.timedelta_range
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.infer_freq.html">
                                        pandas.infer_freq
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.interval_range.html">
                                        pandas.interval_range
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.eval.html">
                                        pandas.eval
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.util.hash_array.html">
                                        pandas.util.hash_array
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.util.hash_pandas_object.html">
                                        pandas.util.hash_pandas_object
                                    </a>
                                </li>
                                <li class="toctree-l2">
                                    <a class="reference internal" href="pandas.api.exchange.from_dataframe.html">
                                        pandas.api.exchange.from_dataframe
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../series.html">
                                Series
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../frame.html">
                                DataFrame
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../arrays.html">
                                pandas arrays, scalars, and data types
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../indexing.html">
                                Index objects
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../offset_frequency.html">
                                Date offsets
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../window.html">
                                Window
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../groupby.html">
                                GroupBy
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../resampling.html">
                                Resampling
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../style.html">
                                Style
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../plotting.html">
                                Plotting
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../options.html">
                                Options and settings
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../extensions.html">
                                Extensions
                            </a>
                        </li>
                        <li class="toctree-l1">
                            <a class="reference internal" href="../testing.html">
                                Testing
                            </a>
                        </li>
                    </ul>


                </div>
            </nav>
            </div>
            <div class="sidebar-end-items">
            </div>
        </div>




        <div class="d-none d-xl-block col-xl-2 bd-toc">


            <div class="toc-item">


                <nav id="bd-toc-nav">

                </nav>
            </div>

            <div class="toc-item">

            </div>


        </div>






        <main class="col-12 col-md-9 col-xl-7 py-md-5 pl-md-5 pr-md-4 bd-content" role="main">

            <div>

                <section id="pandas-concat">
                    <h1>pandas.concat<a class="headerlink" href="#pandas-concat" title="Permalink to this headline">¶</a></h1>
                    <dl class="py function">
                        <dt class="sig sig-object py" id="pandas.concat">
                            <span class="sig-prename descclassname"><span class="pre">pandas.</span></span><span class="sig-name descname"><span class="pre">concat</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">objs</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">axis</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">join</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'outer'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">ignore_index</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">keys</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">levels</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">names</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">verify_integrity</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">sort</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">copy</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span><a class="reference external" href="https://github.com/pandas-dev/pandas/blob/main/pandas/core\reshape\concat.py#L146-L378"><span class="viewcode-link"><span class="pre">[source]</span></span></a><a class="headerlink" href="#pandas.concat" title="Permalink to this definition">¶</a></dt>
                        <dd><p>Concatenate pandas objects along a particular axis with optional set logic
                            along the other axes.</p>
                            <p>Can also add a layer of hierarchical indexing on the concatenation axis,
                                which may be useful if the labels are the same (or overlapping) on
                                the passed axis number.</p>
                            <dl class="field-list">
                                <dt class="field-odd">Parameters</dt>
                                <dd class="field-odd"><dl>
                                    <dt><strong>objs</strong><span class="classifier">a sequence or mapping of Series or DataFrame objects</span></dt><dd><p>If a mapping is passed, the sorted keys will be used as the <cite>keys</cite>
                                    argument, unless it is passed, in which case the values will be
                                    selected (see below). Any None objects will be dropped silently unless
                                    they are all None in which case a ValueError will be raised.</p>
                                </dd>
                                    <dt><strong>axis</strong><span class="classifier">{0/’index’, 1/’columns’}, default 0</span></dt><dd><p>The axis to concatenate along.
                                    If 0, the outcome is identical to <a class="reference internal" href="pandas.DataFrame.append.html#pandas.DataFrame.append" title="pandas.DataFrame.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">DataFrame.append()</span></code></a>.</p>
                                </dd>
                                    <dt><strong>join</strong><span class="classifier">{‘inner’, ‘outer’}, default ‘outer’</span></dt><dd><p>How to handle indexes on other axis (or axes).</p>
                                </dd>
                                    <dt><strong>ignore_index</strong><span class="classifier">bool, default False</span></dt><dd><p>If True, do not use the index values along the concatenation axis. The
                                    resulting axis will be labeled 0, …, n - 1. This is useful if you are
                                    concatenating objects where the concatenation axis does not have
                                    meaningful indexing information. Note the index values on the other
                                    axes are still respected in the join.</p>
                                </dd>
                                    <dt><strong>keys</strong><span class="classifier">sequence, default None</span></dt><dd><p>If multiple levels passed, should contain tuples. Construct
                                    hierarchical index using the passed keys as the outermost level.</p>
                                </dd>
                                    <dt><strong>levels</strong><span class="classifier">list of sequences, default None</span></dt><dd><p>Specific levels (unique values) to use for constructing a
                                    MultiIndex. Otherwise they will be inferred from the keys.</p>
                                </dd>
                                    <dt><strong>names</strong><span class="classifier">list, default None</span></dt><dd><p>Names for the levels in the resulting hierarchical index.</p>
                                </dd>
                                    <dt><strong>verify_integrity</strong><span class="classifier">bool, default False</span></dt><dd><p>Check whether the new concatenated axis contains duplicates. This can
                                    be very expensive relative to the actual data concatenation.</p>
                                </dd>
                                    <dt><strong>sort</strong><span class="classifier">bool, default False</span></dt><dd><p>Sort non-concatenation axis if it is not already aligned when <cite>join</cite>
                                    is ‘outer’.
                                    This has no effect when <code class="docutils literal notranslate"><span class="pre">join='inner'</span></code>, which already preserves
                                    the order of the non-concatenation axis.</p>
                                    <div class="versionchanged">
                                        <p><span class="versionmodified changed">Changed in version 1.0.0: </span>Changed to not sort by default.</p>
                                    </div>
                                </dd>
                                    <dt><strong>copy</strong><span class="classifier">bool, default True</span></dt><dd><p>If False, do not copy data unnecessarily.</p>
                                </dd>
                                </dl>
                                </dd>
                                <dt class="field-even">Returns</dt>
                                <dd class="field-even"><dl class="simple">
                                    <dt>object, type of objs</dt><dd><p>When concatenating all <code class="docutils literal notranslate"><span class="pre">Series</span></code> along the index (axis=0), a
                                    <code class="docutils literal notranslate"><span class="pre">Series</span></code> is returned. When <code class="docutils literal notranslate"><span class="pre">objs</span></code> contains at least one
                                    <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code>, a <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> is returned. When concatenating along
                                    the columns (axis=1), a <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> is returned.</p>
                                </dd>
                                </dl>
                                </dd>
                            </dl>
                            <div class="admonition seealso">
                                <p class="admonition-title">See also</p>
                                <dl class="simple">
                                    <dt><a class="reference internal" href="pandas.DataFrame.join.html#pandas.DataFrame.join" title="pandas.DataFrame.join"><code class="xref py py-obj docutils literal notranslate"><span class="pre">DataFrame.join</span></code></a></dt><dd><p>Join DataFrames using indexes.</p>
                                </dd>
                                    <dt><a class="reference internal" href="pandas.DataFrame.merge.html#pandas.DataFrame.merge" title="pandas.DataFrame.merge"><code class="xref py py-obj docutils literal notranslate"><span class="pre">DataFrame.merge</span></code></a></dt><dd><p>Merge DataFrames by indexes or columns.</p>
                                </dd>
                                </dl>
                            </div>
                            <p class="rubric">Notes</p>
                            <p>The keys, levels, and names arguments are all optional.</p>
                            <p>A walkthrough of how this method fits in with other tools for combining
                                pandas objects can be found <a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html">here</a>.</p>
                            <p class="rubric">Examples</p>
                            <p>Combine two <code class="docutils literal notranslate"><span class="pre">Series</span></code>.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">s1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">s2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="s1">&#39;d&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">])</span>
<span class="go">0    a</span>
<span class="go">1    b</span>
<span class="go">0    c</span>
<span class="go">1    d</span>
<span class="go">dtype: object</span>
</pre></div>
                            </div>
                            <p>Clear the existing index and reset it in the result
                                by setting the <code class="docutils literal notranslate"><span class="pre">ignore_index</span></code> option to <code class="docutils literal notranslate"><span class="pre">True</span></code>.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">],</span> <span class="n">ignore_index</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="go">0    a</span>
<span class="go">1    b</span>
<span class="go">2    c</span>
<span class="go">3    d</span>
<span class="go">dtype: object</span>
</pre></div>
                            </div>
                            <p>Add a hierarchical index at the outermost level of
                                the data with the <code class="docutils literal notranslate"><span class="pre">keys</span></code> option.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">],</span> <span class="n">keys</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;s1&#39;</span><span class="p">,</span> <span class="s1">&#39;s2&#39;</span><span class="p">])</span>
<span class="go">s1  0    a</span>
<span class="go">    1    b</span>
<span class="go">s2  0    c</span>
<span class="go">    1    d</span>
<span class="go">dtype: object</span>
</pre></div>
                            </div>
                            <p>Label the index keys you create with the <code class="docutils literal notranslate"><span class="pre">names</span></code> option.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">],</span> <span class="n">keys</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;s1&#39;</span><span class="p">,</span> <span class="s1">&#39;s2&#39;</span><span class="p">],</span>
<span class="gp">... </span>          <span class="n">names</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;Series name&#39;</span><span class="p">,</span> <span class="s1">&#39;Row ID&#39;</span><span class="p">])</span>
<span class="go">Series name  Row ID</span>
<span class="go">s1           0         a</span>
<span class="go">             1         b</span>
<span class="go">s2           0         c</span>
<span class="go">             1         d</span>
<span class="go">dtype: object</span>
</pre></div>
                            </div>
                            <p>Combine two <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> objects with identical columns.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">]],</span>
<span class="gp">... </span>                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;letter&#39;</span><span class="p">,</span> <span class="s1">&#39;number&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df1</span>
<span class="go">  letter  number</span>
<span class="go">0      a       1</span>
<span class="go">1      b       2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">]],</span>
<span class="gp">... </span>                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;letter&#39;</span><span class="p">,</span> <span class="s1">&#39;number&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df2</span>
<span class="go">  letter  number</span>
<span class="go">0      c       3</span>
<span class="go">1      d       4</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">])</span>
<span class="go">  letter  number</span>
<span class="go">0      a       1</span>
<span class="go">1      b       2</span>
<span class="go">0      c       3</span>
<span class="go">1      d       4</span>
</pre></div>
                            </div>
                            <p>Combine <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> objects with overlapping columns
                                and return everything. Columns outside the intersection will
                                be filled with <code class="docutils literal notranslate"><span class="pre">NaN</span></code> values.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">df3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;cat&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;dog&#39;</span><span class="p">]],</span>
<span class="gp">... </span>                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;letter&#39;</span><span class="p">,</span> <span class="s1">&#39;number&#39;</span><span class="p">,</span> <span class="s1">&#39;animal&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df3</span>
<span class="go">  letter  number animal</span>
<span class="go">0      c       3    cat</span>
<span class="go">1      d       4    dog</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df3</span><span class="p">],</span> <span class="n">sort</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="go">  letter  number animal</span>
<span class="go">0      a       1    NaN</span>
<span class="go">1      b       2    NaN</span>
<span class="go">0      c       3    cat</span>
<span class="go">1      d       4    dog</span>
</pre></div>
                            </div>
                            <p>Combine <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> objects with overlapping columns
                                and return only those that are shared by passing <code class="docutils literal notranslate"><span class="pre">inner</span></code> to
                                the <code class="docutils literal notranslate"><span class="pre">join</span></code> keyword argument.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df3</span><span class="p">],</span> <span class="n">join</span><span class="o">=</span><span class="s2">&quot;inner&quot;</span><span class="p">)</span>
<span class="go">  letter  number</span>
<span class="go">0      a       1</span>
<span class="go">1      b       2</span>
<span class="go">0      c       3</span>
<span class="go">1      d       4</span>
</pre></div>
                            </div>
                            <p>Combine <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> objects horizontally along the x axis by
                                passing in <code class="docutils literal notranslate"><span class="pre">axis=1</span></code>.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">df4</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s1">&#39;bird&#39;</span><span class="p">,</span> <span class="s1">&#39;polly&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;monkey&#39;</span><span class="p">,</span> <span class="s1">&#39;george&#39;</span><span class="p">]],</span>
<span class="gp">... </span>                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;animal&#39;</span><span class="p">,</span> <span class="s1">&#39;name&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df4</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="go">  letter  number  animal    name</span>
<span class="go">0      a       1    bird   polly</span>
<span class="go">1      b       2  monkey  george</span>
</pre></div>
                            </div>
                            <p>Prevent the result from including duplicate index values with the
                                <code class="docutils literal notranslate"><span class="pre">verify_integrity</span></code> option.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">df5</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df5</span>
<span class="go">   0</span>
<span class="go">a  1</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df6</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([</span><span class="mi">2</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">df6</span>
<span class="go">   0</span>
<span class="go">a  2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df5</span><span class="p">,</span> <span class="n">df6</span><span class="p">],</span> <span class="n">verify_integrity</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="gt">Traceback (most recent call last):</span>
    <span class="o">...</span>
<span class="gr">ValueError</span>: <span class="n">Indexes have overlapping values: [&#39;a&#39;]</span>
</pre></div>
                            </div>
                            <p>Append a single row to the end of a <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> object.</p>
                            <div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s2">&quot;A&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;B&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">},</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span>
<span class="go">    A   B</span>
<span class="go">0   1   2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s2">&quot;A&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span>
<span class="go">    A</span>
<span class="go">0   3</span>
<span class="gp">&gt;&gt;&gt; </span><span class="k">for</span> <span class="n">rowIndex</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">b</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
<span class="gp">&gt;&gt;&gt; </span>    <span class="nb">print</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">a</span><span class="p">,</span> <span class="n">row</span><span class="o">.</span><span class="n">to_frame</span><span class="p">()</span><span class="o">.</span><span class="n">T</span><span class="p">],</span> <span class="n">ignore_index</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
<span class="go">   A    B</span>
<span class="go">0  1  2.0</span>
<span class="go">1  3  NaN</span>
</pre></div>
                            </div>
                        </dd></dl>

                </section>


            </div>


            <!-- Previous / next buttons -->
            <div class='prev-next-area'>
                <a class='left-prev' id="prev-link" href="pandas.merge_asof.html" title="previous page">
                    <i class="fas fa-angle-left"></i>
                    <div class="prev-next-info">
                        <p class="prev-next-subtitle">previous</p>
                        <p class="prev-next-title">pandas.merge_asof</p>
                    </div>
                </a>
                <a class='right-next' id="next-link" href="pandas.get_dummies.html" title="next page">
                    <div class="prev-next-info">
                        <p class="prev-next-subtitle">next</p>
                        <p class="prev-next-title">pandas.get_dummies</p>
                    </div>
                    <i class="fas fa-angle-right"></i>
                </a>
            </div>

        </main>


    </div>
</div>

<script src="../../_static/scripts/pydata-sphinx-theme.js?digest=1999514e3f237ded88cf"></script>
<footer class="footer mt-5 mt-md-0">
    <div class="container">

        <div class="footer-item">
            <p class="copyright">
                &copy; Copyright 2008-2022, the pandas development team.<br>
            </p>
        </div>

        <div class="footer-item">
            <p class="sphinx-version">
                Created using <a href="http://sphinx-doc.org/">Sphinx</a> 4.5.0.<br>
            </p>
        </div>

    </div>
</footer>
</body>
</html>
}